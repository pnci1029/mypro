/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.LocalDateTime;

import org.jooq.JSON;
import org.jooq.Record2;
import org.jooq.generated.enums.UserAccountLocked;
import org.jooq.generated.enums.UserAlterPriv;
import org.jooq.generated.enums.UserAlterRoutinePriv;
import org.jooq.generated.enums.UserCreatePriv;
import org.jooq.generated.enums.UserCreateRolePriv;
import org.jooq.generated.enums.UserCreateRoutinePriv;
import org.jooq.generated.enums.UserCreateTablespacePriv;
import org.jooq.generated.enums.UserCreateTmpTablePriv;
import org.jooq.generated.enums.UserCreateUserPriv;
import org.jooq.generated.enums.UserCreateViewPriv;
import org.jooq.generated.enums.UserDeletePriv;
import org.jooq.generated.enums.UserDropPriv;
import org.jooq.generated.enums.UserDropRolePriv;
import org.jooq.generated.enums.UserEventPriv;
import org.jooq.generated.enums.UserExecutePriv;
import org.jooq.generated.enums.UserFilePriv;
import org.jooq.generated.enums.UserGrantPriv;
import org.jooq.generated.enums.UserIndexPriv;
import org.jooq.generated.enums.UserInsertPriv;
import org.jooq.generated.enums.UserLockTablesPriv;
import org.jooq.generated.enums.UserPasswordExpired;
import org.jooq.generated.enums.UserPasswordRequireCurrent;
import org.jooq.generated.enums.UserProcessPriv;
import org.jooq.generated.enums.UserReferencesPriv;
import org.jooq.generated.enums.UserReloadPriv;
import org.jooq.generated.enums.UserReplClientPriv;
import org.jooq.generated.enums.UserReplSlavePriv;
import org.jooq.generated.enums.UserSelectPriv;
import org.jooq.generated.enums.UserShowDbPriv;
import org.jooq.generated.enums.UserShowViewPriv;
import org.jooq.generated.enums.UserShutdownPriv;
import org.jooq.generated.enums.UserSslType;
import org.jooq.generated.enums.UserSuperPriv;
import org.jooq.generated.enums.UserTriggerPriv;
import org.jooq.generated.enums.UserUpdatePriv;
import org.jooq.generated.tables.User;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;
import org.jooq.types.UShort;


/**
 * Users and global privileges
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mysql.user.Host</code>.
     */
    public UserRecord setHost(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Host</code>.
     */
    public String getHost() {
        return (String) get(0);
    }

    /**
     * Setter for <code>mysql.user.User</code>.
     */
    public UserRecord setUser(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.User</code>.
     */
    public String getUser() {
        return (String) get(1);
    }

    /**
     * Setter for <code>mysql.user.Select_priv</code>.
     */
    public UserRecord setSelectPriv(UserSelectPriv value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Select_priv</code>.
     */
    public UserSelectPriv getSelectPriv() {
        return (UserSelectPriv) get(2);
    }

    /**
     * Setter for <code>mysql.user.Insert_priv</code>.
     */
    public UserRecord setInsertPriv(UserInsertPriv value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Insert_priv</code>.
     */
    public UserInsertPriv getInsertPriv() {
        return (UserInsertPriv) get(3);
    }

    /**
     * Setter for <code>mysql.user.Update_priv</code>.
     */
    public UserRecord setUpdatePriv(UserUpdatePriv value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Update_priv</code>.
     */
    public UserUpdatePriv getUpdatePriv() {
        return (UserUpdatePriv) get(4);
    }

    /**
     * Setter for <code>mysql.user.Delete_priv</code>.
     */
    public UserRecord setDeletePriv(UserDeletePriv value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Delete_priv</code>.
     */
    public UserDeletePriv getDeletePriv() {
        return (UserDeletePriv) get(5);
    }

    /**
     * Setter for <code>mysql.user.Create_priv</code>.
     */
    public UserRecord setCreatePriv(UserCreatePriv value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Create_priv</code>.
     */
    public UserCreatePriv getCreatePriv() {
        return (UserCreatePriv) get(6);
    }

    /**
     * Setter for <code>mysql.user.Drop_priv</code>.
     */
    public UserRecord setDropPriv(UserDropPriv value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Drop_priv</code>.
     */
    public UserDropPriv getDropPriv() {
        return (UserDropPriv) get(7);
    }

    /**
     * Setter for <code>mysql.user.Reload_priv</code>.
     */
    public UserRecord setReloadPriv(UserReloadPriv value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Reload_priv</code>.
     */
    public UserReloadPriv getReloadPriv() {
        return (UserReloadPriv) get(8);
    }

    /**
     * Setter for <code>mysql.user.Shutdown_priv</code>.
     */
    public UserRecord setShutdownPriv(UserShutdownPriv value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Shutdown_priv</code>.
     */
    public UserShutdownPriv getShutdownPriv() {
        return (UserShutdownPriv) get(9);
    }

    /**
     * Setter for <code>mysql.user.Process_priv</code>.
     */
    public UserRecord setProcessPriv(UserProcessPriv value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Process_priv</code>.
     */
    public UserProcessPriv getProcessPriv() {
        return (UserProcessPriv) get(10);
    }

    /**
     * Setter for <code>mysql.user.File_priv</code>.
     */
    public UserRecord setFilePriv(UserFilePriv value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.File_priv</code>.
     */
    public UserFilePriv getFilePriv() {
        return (UserFilePriv) get(11);
    }

    /**
     * Setter for <code>mysql.user.Grant_priv</code>.
     */
    public UserRecord setGrantPriv(UserGrantPriv value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Grant_priv</code>.
     */
    public UserGrantPriv getGrantPriv() {
        return (UserGrantPriv) get(12);
    }

    /**
     * Setter for <code>mysql.user.References_priv</code>.
     */
    public UserRecord setReferencesPriv(UserReferencesPriv value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.References_priv</code>.
     */
    public UserReferencesPriv getReferencesPriv() {
        return (UserReferencesPriv) get(13);
    }

    /**
     * Setter for <code>mysql.user.Index_priv</code>.
     */
    public UserRecord setIndexPriv(UserIndexPriv value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Index_priv</code>.
     */
    public UserIndexPriv getIndexPriv() {
        return (UserIndexPriv) get(14);
    }

    /**
     * Setter for <code>mysql.user.Alter_priv</code>.
     */
    public UserRecord setAlterPriv(UserAlterPriv value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Alter_priv</code>.
     */
    public UserAlterPriv getAlterPriv() {
        return (UserAlterPriv) get(15);
    }

    /**
     * Setter for <code>mysql.user.Show_db_priv</code>.
     */
    public UserRecord setShowDbPriv(UserShowDbPriv value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Show_db_priv</code>.
     */
    public UserShowDbPriv getShowDbPriv() {
        return (UserShowDbPriv) get(16);
    }

    /**
     * Setter for <code>mysql.user.Super_priv</code>.
     */
    public UserRecord setSuperPriv(UserSuperPriv value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Super_priv</code>.
     */
    public UserSuperPriv getSuperPriv() {
        return (UserSuperPriv) get(17);
    }

    /**
     * Setter for <code>mysql.user.Create_tmp_table_priv</code>.
     */
    public UserRecord setCreateTmpTablePriv(UserCreateTmpTablePriv value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Create_tmp_table_priv</code>.
     */
    public UserCreateTmpTablePriv getCreateTmpTablePriv() {
        return (UserCreateTmpTablePriv) get(18);
    }

    /**
     * Setter for <code>mysql.user.Lock_tables_priv</code>.
     */
    public UserRecord setLockTablesPriv(UserLockTablesPriv value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Lock_tables_priv</code>.
     */
    public UserLockTablesPriv getLockTablesPriv() {
        return (UserLockTablesPriv) get(19);
    }

    /**
     * Setter for <code>mysql.user.Execute_priv</code>.
     */
    public UserRecord setExecutePriv(UserExecutePriv value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Execute_priv</code>.
     */
    public UserExecutePriv getExecutePriv() {
        return (UserExecutePriv) get(20);
    }

    /**
     * Setter for <code>mysql.user.Repl_slave_priv</code>.
     */
    public UserRecord setReplSlavePriv(UserReplSlavePriv value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Repl_slave_priv</code>.
     */
    public UserReplSlavePriv getReplSlavePriv() {
        return (UserReplSlavePriv) get(21);
    }

    /**
     * Setter for <code>mysql.user.Repl_client_priv</code>.
     */
    public UserRecord setReplClientPriv(UserReplClientPriv value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Repl_client_priv</code>.
     */
    public UserReplClientPriv getReplClientPriv() {
        return (UserReplClientPriv) get(22);
    }

    /**
     * Setter for <code>mysql.user.Create_view_priv</code>.
     */
    public UserRecord setCreateViewPriv(UserCreateViewPriv value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Create_view_priv</code>.
     */
    public UserCreateViewPriv getCreateViewPriv() {
        return (UserCreateViewPriv) get(23);
    }

    /**
     * Setter for <code>mysql.user.Show_view_priv</code>.
     */
    public UserRecord setShowViewPriv(UserShowViewPriv value) {
        set(24, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Show_view_priv</code>.
     */
    public UserShowViewPriv getShowViewPriv() {
        return (UserShowViewPriv) get(24);
    }

    /**
     * Setter for <code>mysql.user.Create_routine_priv</code>.
     */
    public UserRecord setCreateRoutinePriv(UserCreateRoutinePriv value) {
        set(25, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Create_routine_priv</code>.
     */
    public UserCreateRoutinePriv getCreateRoutinePriv() {
        return (UserCreateRoutinePriv) get(25);
    }

    /**
     * Setter for <code>mysql.user.Alter_routine_priv</code>.
     */
    public UserRecord setAlterRoutinePriv(UserAlterRoutinePriv value) {
        set(26, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Alter_routine_priv</code>.
     */
    public UserAlterRoutinePriv getAlterRoutinePriv() {
        return (UserAlterRoutinePriv) get(26);
    }

    /**
     * Setter for <code>mysql.user.Create_user_priv</code>.
     */
    public UserRecord setCreateUserPriv(UserCreateUserPriv value) {
        set(27, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Create_user_priv</code>.
     */
    public UserCreateUserPriv getCreateUserPriv() {
        return (UserCreateUserPriv) get(27);
    }

    /**
     * Setter for <code>mysql.user.Event_priv</code>.
     */
    public UserRecord setEventPriv(UserEventPriv value) {
        set(28, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Event_priv</code>.
     */
    public UserEventPriv getEventPriv() {
        return (UserEventPriv) get(28);
    }

    /**
     * Setter for <code>mysql.user.Trigger_priv</code>.
     */
    public UserRecord setTriggerPriv(UserTriggerPriv value) {
        set(29, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Trigger_priv</code>.
     */
    public UserTriggerPriv getTriggerPriv() {
        return (UserTriggerPriv) get(29);
    }

    /**
     * Setter for <code>mysql.user.Create_tablespace_priv</code>.
     */
    public UserRecord setCreateTablespacePriv(UserCreateTablespacePriv value) {
        set(30, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Create_tablespace_priv</code>.
     */
    public UserCreateTablespacePriv getCreateTablespacePriv() {
        return (UserCreateTablespacePriv) get(30);
    }

    /**
     * Setter for <code>mysql.user.ssl_type</code>.
     */
    public UserRecord setSslType(UserSslType value) {
        set(31, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.ssl_type</code>.
     */
    public UserSslType getSslType() {
        return (UserSslType) get(31);
    }

    /**
     * Setter for <code>mysql.user.ssl_cipher</code>.
     */
    public UserRecord setSslCipher(byte[] value) {
        set(32, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.ssl_cipher</code>.
     */
    public byte[] getSslCipher() {
        return (byte[]) get(32);
    }

    /**
     * Setter for <code>mysql.user.x509_issuer</code>.
     */
    public UserRecord setX509Issuer(byte[] value) {
        set(33, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.x509_issuer</code>.
     */
    public byte[] getX509Issuer() {
        return (byte[]) get(33);
    }

    /**
     * Setter for <code>mysql.user.x509_subject</code>.
     */
    public UserRecord setX509Subject(byte[] value) {
        set(34, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.x509_subject</code>.
     */
    public byte[] getX509Subject() {
        return (byte[]) get(34);
    }

    /**
     * Setter for <code>mysql.user.max_questions</code>.
     */
    public UserRecord setMaxQuestions(UInteger value) {
        set(35, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.max_questions</code>.
     */
    public UInteger getMaxQuestions() {
        return (UInteger) get(35);
    }

    /**
     * Setter for <code>mysql.user.max_updates</code>.
     */
    public UserRecord setMaxUpdates(UInteger value) {
        set(36, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.max_updates</code>.
     */
    public UInteger getMaxUpdates() {
        return (UInteger) get(36);
    }

    /**
     * Setter for <code>mysql.user.max_connections</code>.
     */
    public UserRecord setMaxConnections(UInteger value) {
        set(37, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.max_connections</code>.
     */
    public UInteger getMaxConnections() {
        return (UInteger) get(37);
    }

    /**
     * Setter for <code>mysql.user.max_user_connections</code>.
     */
    public UserRecord setMaxUserConnections(UInteger value) {
        set(38, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.max_user_connections</code>.
     */
    public UInteger getMaxUserConnections() {
        return (UInteger) get(38);
    }

    /**
     * Setter for <code>mysql.user.plugin</code>.
     */
    public UserRecord setPlugin(String value) {
        set(39, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.plugin</code>.
     */
    public String getPlugin() {
        return (String) get(39);
    }

    /**
     * Setter for <code>mysql.user.authentication_string</code>.
     */
    public UserRecord setAuthenticationString(String value) {
        set(40, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.authentication_string</code>.
     */
    public String getAuthenticationString() {
        return (String) get(40);
    }

    /**
     * Setter for <code>mysql.user.password_expired</code>.
     */
    public UserRecord setPasswordExpired(UserPasswordExpired value) {
        set(41, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.password_expired</code>.
     */
    public UserPasswordExpired getPasswordExpired() {
        return (UserPasswordExpired) get(41);
    }

    /**
     * Setter for <code>mysql.user.password_last_changed</code>.
     */
    public UserRecord setPasswordLastChanged(LocalDateTime value) {
        set(42, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.password_last_changed</code>.
     */
    public LocalDateTime getPasswordLastChanged() {
        return (LocalDateTime) get(42);
    }

    /**
     * Setter for <code>mysql.user.password_lifetime</code>.
     */
    public UserRecord setPasswordLifetime(UShort value) {
        set(43, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.password_lifetime</code>.
     */
    public UShort getPasswordLifetime() {
        return (UShort) get(43);
    }

    /**
     * Setter for <code>mysql.user.account_locked</code>.
     */
    public UserRecord setAccountLocked(UserAccountLocked value) {
        set(44, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.account_locked</code>.
     */
    public UserAccountLocked getAccountLocked() {
        return (UserAccountLocked) get(44);
    }

    /**
     * Setter for <code>mysql.user.Create_role_priv</code>.
     */
    public UserRecord setCreateRolePriv(UserCreateRolePriv value) {
        set(45, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Create_role_priv</code>.
     */
    public UserCreateRolePriv getCreateRolePriv() {
        return (UserCreateRolePriv) get(45);
    }

    /**
     * Setter for <code>mysql.user.Drop_role_priv</code>.
     */
    public UserRecord setDropRolePriv(UserDropRolePriv value) {
        set(46, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Drop_role_priv</code>.
     */
    public UserDropRolePriv getDropRolePriv() {
        return (UserDropRolePriv) get(46);
    }

    /**
     * Setter for <code>mysql.user.Password_reuse_history</code>.
     */
    public UserRecord setPasswordReuseHistory(UShort value) {
        set(47, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Password_reuse_history</code>.
     */
    public UShort getPasswordReuseHistory() {
        return (UShort) get(47);
    }

    /**
     * Setter for <code>mysql.user.Password_reuse_time</code>.
     */
    public UserRecord setPasswordReuseTime(UShort value) {
        set(48, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Password_reuse_time</code>.
     */
    public UShort getPasswordReuseTime() {
        return (UShort) get(48);
    }

    /**
     * Setter for <code>mysql.user.Password_require_current</code>.
     */
    public UserRecord setPasswordRequireCurrent(UserPasswordRequireCurrent value) {
        set(49, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.Password_require_current</code>.
     */
    public UserPasswordRequireCurrent getPasswordRequireCurrent() {
        return (UserPasswordRequireCurrent) get(49);
    }

    /**
     * Setter for <code>mysql.user.User_attributes</code>.
     */
    public UserRecord setUserAttributes(JSON value) {
        set(50, value);
        return this;
    }

    /**
     * Getter for <code>mysql.user.User_attributes</code>.
     */
    public JSON getUserAttributes() {
        return (JSON) get(50);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(String host, String user, UserSelectPriv selectPriv, UserInsertPriv insertPriv, UserUpdatePriv updatePriv, UserDeletePriv deletePriv, UserCreatePriv createPriv, UserDropPriv dropPriv, UserReloadPriv reloadPriv, UserShutdownPriv shutdownPriv, UserProcessPriv processPriv, UserFilePriv filePriv, UserGrantPriv grantPriv, UserReferencesPriv referencesPriv, UserIndexPriv indexPriv, UserAlterPriv alterPriv, UserShowDbPriv showDbPriv, UserSuperPriv superPriv, UserCreateTmpTablePriv createTmpTablePriv, UserLockTablesPriv lockTablesPriv, UserExecutePriv executePriv, UserReplSlavePriv replSlavePriv, UserReplClientPriv replClientPriv, UserCreateViewPriv createViewPriv, UserShowViewPriv showViewPriv, UserCreateRoutinePriv createRoutinePriv, UserAlterRoutinePriv alterRoutinePriv, UserCreateUserPriv createUserPriv, UserEventPriv eventPriv, UserTriggerPriv triggerPriv, UserCreateTablespacePriv createTablespacePriv, UserSslType sslType, byte[] sslCipher, byte[] x509Issuer, byte[] x509Subject, UInteger maxQuestions, UInteger maxUpdates, UInteger maxConnections, UInteger maxUserConnections, String plugin, String authenticationString, UserPasswordExpired passwordExpired, LocalDateTime passwordLastChanged, UShort passwordLifetime, UserAccountLocked accountLocked, UserCreateRolePriv createRolePriv, UserDropRolePriv dropRolePriv, UShort passwordReuseHistory, UShort passwordReuseTime, UserPasswordRequireCurrent passwordRequireCurrent, JSON userAttributes) {
        super(User.USER);

        setHost(host);
        setUser(user);
        setSelectPriv(selectPriv);
        setInsertPriv(insertPriv);
        setUpdatePriv(updatePriv);
        setDeletePriv(deletePriv);
        setCreatePriv(createPriv);
        setDropPriv(dropPriv);
        setReloadPriv(reloadPriv);
        setShutdownPriv(shutdownPriv);
        setProcessPriv(processPriv);
        setFilePriv(filePriv);
        setGrantPriv(grantPriv);
        setReferencesPriv(referencesPriv);
        setIndexPriv(indexPriv);
        setAlterPriv(alterPriv);
        setShowDbPriv(showDbPriv);
        setSuperPriv(superPriv);
        setCreateTmpTablePriv(createTmpTablePriv);
        setLockTablesPriv(lockTablesPriv);
        setExecutePriv(executePriv);
        setReplSlavePriv(replSlavePriv);
        setReplClientPriv(replClientPriv);
        setCreateViewPriv(createViewPriv);
        setShowViewPriv(showViewPriv);
        setCreateRoutinePriv(createRoutinePriv);
        setAlterRoutinePriv(alterRoutinePriv);
        setCreateUserPriv(createUserPriv);
        setEventPriv(eventPriv);
        setTriggerPriv(triggerPriv);
        setCreateTablespacePriv(createTablespacePriv);
        setSslType(sslType);
        setSslCipher(sslCipher);
        setX509Issuer(x509Issuer);
        setX509Subject(x509Subject);
        setMaxQuestions(maxQuestions);
        setMaxUpdates(maxUpdates);
        setMaxConnections(maxConnections);
        setMaxUserConnections(maxUserConnections);
        setPlugin(plugin);
        setAuthenticationString(authenticationString);
        setPasswordExpired(passwordExpired);
        setPasswordLastChanged(passwordLastChanged);
        setPasswordLifetime(passwordLifetime);
        setAccountLocked(accountLocked);
        setCreateRolePriv(createRolePriv);
        setDropRolePriv(dropRolePriv);
        setPasswordReuseHistory(passwordReuseHistory);
        setPasswordReuseTime(passwordReuseTime);
        setPasswordRequireCurrent(passwordRequireCurrent);
        setUserAttributes(userAttributes);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(org.jooq.generated.tables.pojos.User value) {
        super(User.USER);

        if (value != null) {
            setHost(value.getHost());
            setUser(value.getUser());
            setSelectPriv(value.getSelectPriv());
            setInsertPriv(value.getInsertPriv());
            setUpdatePriv(value.getUpdatePriv());
            setDeletePriv(value.getDeletePriv());
            setCreatePriv(value.getCreatePriv());
            setDropPriv(value.getDropPriv());
            setReloadPriv(value.getReloadPriv());
            setShutdownPriv(value.getShutdownPriv());
            setProcessPriv(value.getProcessPriv());
            setFilePriv(value.getFilePriv());
            setGrantPriv(value.getGrantPriv());
            setReferencesPriv(value.getReferencesPriv());
            setIndexPriv(value.getIndexPriv());
            setAlterPriv(value.getAlterPriv());
            setShowDbPriv(value.getShowDbPriv());
            setSuperPriv(value.getSuperPriv());
            setCreateTmpTablePriv(value.getCreateTmpTablePriv());
            setLockTablesPriv(value.getLockTablesPriv());
            setExecutePriv(value.getExecutePriv());
            setReplSlavePriv(value.getReplSlavePriv());
            setReplClientPriv(value.getReplClientPriv());
            setCreateViewPriv(value.getCreateViewPriv());
            setShowViewPriv(value.getShowViewPriv());
            setCreateRoutinePriv(value.getCreateRoutinePriv());
            setAlterRoutinePriv(value.getAlterRoutinePriv());
            setCreateUserPriv(value.getCreateUserPriv());
            setEventPriv(value.getEventPriv());
            setTriggerPriv(value.getTriggerPriv());
            setCreateTablespacePriv(value.getCreateTablespacePriv());
            setSslType(value.getSslType());
            setSslCipher(value.getSslCipher());
            setX509Issuer(value.getX509Issuer());
            setX509Subject(value.getX509Subject());
            setMaxQuestions(value.getMaxQuestions());
            setMaxUpdates(value.getMaxUpdates());
            setMaxConnections(value.getMaxConnections());
            setMaxUserConnections(value.getMaxUserConnections());
            setPlugin(value.getPlugin());
            setAuthenticationString(value.getAuthenticationString());
            setPasswordExpired(value.getPasswordExpired());
            setPasswordLastChanged(value.getPasswordLastChanged());
            setPasswordLifetime(value.getPasswordLifetime());
            setAccountLocked(value.getAccountLocked());
            setCreateRolePriv(value.getCreateRolePriv());
            setDropRolePriv(value.getDropRolePriv());
            setPasswordReuseHistory(value.getPasswordReuseHistory());
            setPasswordReuseTime(value.getPasswordReuseTime());
            setPasswordRequireCurrent(value.getPasswordRequireCurrent());
            setUserAttributes(value.getUserAttributes());
            resetChangedOnNotNull();
        }
    }
}
