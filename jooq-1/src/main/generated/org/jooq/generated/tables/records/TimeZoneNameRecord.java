/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import org.jooq.Record1;
import org.jooq.generated.tables.JTimeZoneName;
import org.jooq.generated.tables.pojos.TimeZoneName;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * Time zone names
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TimeZoneNameRecord extends UpdatableRecordImpl<TimeZoneNameRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mysql.time_zone_name.Name</code>.
     */
    public TimeZoneNameRecord setName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>mysql.time_zone_name.Name</code>.
     */
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>mysql.time_zone_name.Time_zone_id</code>.
     */
    public TimeZoneNameRecord setTimeZoneId(UInteger value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>mysql.time_zone_name.Time_zone_id</code>.
     */
    public UInteger getTimeZoneId() {
        return (UInteger) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TimeZoneNameRecord
     */
    public TimeZoneNameRecord() {
        super(JTimeZoneName.TIME_ZONE_NAME);
    }

    /**
     * Create a detached, initialised TimeZoneNameRecord
     */
    public TimeZoneNameRecord(String name, UInteger timeZoneId) {
        super(JTimeZoneName.TIME_ZONE_NAME);

        setName(name);
        setTimeZoneId(timeZoneId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TimeZoneNameRecord
     */
    public TimeZoneNameRecord(TimeZoneName value) {
        super(JTimeZoneName.TIME_ZONE_NAME);

        if (value != null) {
            setName(value.getName());
            setTimeZoneId(value.getTimeZoneId());
            resetChangedOnNotNull();
        }
    }
}
