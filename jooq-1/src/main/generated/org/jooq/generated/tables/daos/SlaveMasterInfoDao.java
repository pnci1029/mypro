/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.SlaveMasterInfo;
import org.jooq.generated.tables.records.SlaveMasterInfoRecord;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * Master Information
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SlaveMasterInfoDao extends DAOImpl<SlaveMasterInfoRecord, org.jooq.generated.tables.pojos.SlaveMasterInfo, String> {

    /**
     * Create a new SlaveMasterInfoDao without any configuration
     */
    public SlaveMasterInfoDao() {
        super(SlaveMasterInfo.SLAVE_MASTER_INFO, org.jooq.generated.tables.pojos.SlaveMasterInfo.class);
    }

    /**
     * Create a new SlaveMasterInfoDao with an attached configuration
     */
    public SlaveMasterInfoDao(Configuration configuration) {
        super(SlaveMasterInfo.SLAVE_MASTER_INFO, org.jooq.generated.tables.pojos.SlaveMasterInfo.class, configuration);
    }

    @Override
    public String getId(org.jooq.generated.tables.pojos.SlaveMasterInfo object) {
        return object.getChannelName();
    }

    /**
     * Fetch records that have <code>Number_of_lines BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfNumberOfLines(UInteger lowerInclusive, UInteger upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.NUMBER_OF_LINES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Number_of_lines IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchByNumberOfLines(UInteger... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.NUMBER_OF_LINES, values);
    }

    /**
     * Fetch records that have <code>Master_log_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfMasterLogName(String lowerInclusive, String upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.MASTER_LOG_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Master_log_name IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchByMasterLogName(String... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.MASTER_LOG_NAME, values);
    }

    /**
     * Fetch records that have <code>Master_log_pos BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfMasterLogPos(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.MASTER_LOG_POS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Master_log_pos IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchByMasterLogPos(ULong... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.MASTER_LOG_POS, values);
    }

    /**
     * Fetch records that have <code>Host BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfHost(String lowerInclusive, String upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.HOST, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Host IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchByHost(String... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.HOST, values);
    }

    /**
     * Fetch records that have <code>User_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfUserName(String lowerInclusive, String upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.USER_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>User_name IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchByUserName(String... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.USER_NAME, values);
    }

    /**
     * Fetch records that have <code>User_password BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfUserPassword(String lowerInclusive, String upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.USER_PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>User_password IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchByUserPassword(String... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.USER_PASSWORD, values);
    }

    /**
     * Fetch records that have <code>Port BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfPort(UInteger lowerInclusive, UInteger upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.PORT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Port IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchByPort(UInteger... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.PORT, values);
    }

    /**
     * Fetch records that have <code>Connect_retry BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfConnectRetry(UInteger lowerInclusive, UInteger upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.CONNECT_RETRY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Connect_retry IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchByConnectRetry(UInteger... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.CONNECT_RETRY, values);
    }

    /**
     * Fetch records that have <code>Enabled_ssl BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfEnabledSsl(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.ENABLED_SSL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Enabled_ssl IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchByEnabledSsl(Byte... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.ENABLED_SSL, values);
    }

    /**
     * Fetch records that have <code>Ssl_ca BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfSslCa(String lowerInclusive, String upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.SSL_CA, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Ssl_ca IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchBySslCa(String... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.SSL_CA, values);
    }

    /**
     * Fetch records that have <code>Ssl_capath BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfSslCapath(String lowerInclusive, String upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.SSL_CAPATH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Ssl_capath IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchBySslCapath(String... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.SSL_CAPATH, values);
    }

    /**
     * Fetch records that have <code>Ssl_cert BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfSslCert(String lowerInclusive, String upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.SSL_CERT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Ssl_cert IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchBySslCert(String... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.SSL_CERT, values);
    }

    /**
     * Fetch records that have <code>Ssl_cipher BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfSslCipher(String lowerInclusive, String upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.SSL_CIPHER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Ssl_cipher IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchBySslCipher(String... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.SSL_CIPHER, values);
    }

    /**
     * Fetch records that have <code>Ssl_key BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfSslKey(String lowerInclusive, String upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.SSL_KEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Ssl_key IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchBySslKey(String... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.SSL_KEY, values);
    }

    /**
     * Fetch records that have <code>Ssl_verify_server_cert BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfSslVerifyServerCert(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.SSL_VERIFY_SERVER_CERT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Ssl_verify_server_cert IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchBySslVerifyServerCert(Byte... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.SSL_VERIFY_SERVER_CERT, values);
    }

    /**
     * Fetch records that have <code>Heartbeat BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfHeartbeat(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.HEARTBEAT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Heartbeat IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchByHeartbeat(Double... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.HEARTBEAT, values);
    }

    /**
     * Fetch records that have <code>Bind BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfBind(String lowerInclusive, String upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.BIND, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Bind IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchByBind(String... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.BIND, values);
    }

    /**
     * Fetch records that have <code>Ignored_server_ids BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfIgnoredServerIds(String lowerInclusive, String upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.IGNORED_SERVER_IDS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Ignored_server_ids IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchByIgnoredServerIds(String... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.IGNORED_SERVER_IDS, values);
    }

    /**
     * Fetch records that have <code>Uuid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfUuid(String lowerInclusive, String upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Uuid IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchByUuid(String... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.UUID, values);
    }

    /**
     * Fetch records that have <code>Retry_count BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfRetryCount(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.RETRY_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Retry_count IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchByRetryCount(ULong... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.RETRY_COUNT, values);
    }

    /**
     * Fetch records that have <code>Ssl_crl BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfSslCrl(String lowerInclusive, String upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.SSL_CRL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Ssl_crl IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchBySslCrl(String... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.SSL_CRL, values);
    }

    /**
     * Fetch records that have <code>Ssl_crlpath BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfSslCrlpath(String lowerInclusive, String upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.SSL_CRLPATH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Ssl_crlpath IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchBySslCrlpath(String... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.SSL_CRLPATH, values);
    }

    /**
     * Fetch records that have <code>Enabled_auto_position BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfEnabledAutoPosition(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.ENABLED_AUTO_POSITION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Enabled_auto_position IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchByEnabledAutoPosition(Byte... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.ENABLED_AUTO_POSITION, values);
    }

    /**
     * Fetch records that have <code>Channel_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfChannelName(String lowerInclusive, String upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.CHANNEL_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Channel_name IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchByChannelName(String... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.CHANNEL_NAME, values);
    }

    /**
     * Fetch a unique record that has <code>Channel_name = value</code>
     */
    public org.jooq.generated.tables.pojos.SlaveMasterInfo fetchOneByChannelName(String value) {
        return fetchOne(SlaveMasterInfo.SLAVE_MASTER_INFO.CHANNEL_NAME, value);
    }

    /**
     * Fetch a unique record that has <code>Channel_name = value</code>
     */
    public Optional<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchOptionalByChannelName(String value) {
        return fetchOptional(SlaveMasterInfo.SLAVE_MASTER_INFO.CHANNEL_NAME, value);
    }

    /**
     * Fetch records that have <code>Tls_version BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfTlsVersion(String lowerInclusive, String upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.TLS_VERSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Tls_version IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchByTlsVersion(String... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.TLS_VERSION, values);
    }

    /**
     * Fetch records that have <code>Public_key_path BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfPublicKeyPath(String lowerInclusive, String upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.PUBLIC_KEY_PATH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Public_key_path IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchByPublicKeyPath(String... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.PUBLIC_KEY_PATH, values);
    }

    /**
     * Fetch records that have <code>Get_public_key BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfGetPublicKey(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.GET_PUBLIC_KEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Get_public_key IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchByGetPublicKey(Byte... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.GET_PUBLIC_KEY, values);
    }

    /**
     * Fetch records that have <code>Network_namespace BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfNetworkNamespace(String lowerInclusive, String upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.NETWORK_NAMESPACE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Network_namespace IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchByNetworkNamespace(String... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.NETWORK_NAMESPACE, values);
    }

    /**
     * Fetch records that have <code>Master_compression_algorithm BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfMasterCompressionAlgorithm(String lowerInclusive, String upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.MASTER_COMPRESSION_ALGORITHM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Master_compression_algorithm IN
     * (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchByMasterCompressionAlgorithm(String... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.MASTER_COMPRESSION_ALGORITHM, values);
    }

    /**
     * Fetch records that have <code>Master_zstd_compression_level BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfMasterZstdCompressionLevel(UInteger lowerInclusive, UInteger upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.MASTER_ZSTD_COMPRESSION_LEVEL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Master_zstd_compression_level IN
     * (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchByMasterZstdCompressionLevel(UInteger... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.MASTER_ZSTD_COMPRESSION_LEVEL, values);
    }

    /**
     * Fetch records that have <code>Tls_ciphersuites BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfTlsCiphersuites(String lowerInclusive, String upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.TLS_CIPHERSUITES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Tls_ciphersuites IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchByTlsCiphersuites(String... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.TLS_CIPHERSUITES, values);
    }

    /**
     * Fetch records that have <code>Source_connection_auto_failover BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfSourceConnectionAutoFailover(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.SOURCE_CONNECTION_AUTO_FAILOVER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Source_connection_auto_failover IN
     * (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchBySourceConnectionAutoFailover(Byte... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.SOURCE_CONNECTION_AUTO_FAILOVER, values);
    }

    /**
     * Fetch records that have <code>Gtid_only BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchRangeOfGtidOnly(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(SlaveMasterInfo.SLAVE_MASTER_INFO.GTID_ONLY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Gtid_only IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.SlaveMasterInfo> fetchByGtidOnly(Byte... values) {
        return fetch(SlaveMasterInfo.SLAVE_MASTER_INFO.GTID_ONLY, values);
    }
}
