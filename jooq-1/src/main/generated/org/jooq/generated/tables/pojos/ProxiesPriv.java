/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * User proxy privileges
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProxiesPriv implements Serializable {

    private static final long serialVersionUID = 1L;

    private String host;
    private String user;
    private String proxiedHost;
    private String proxiedUser;
    private Byte withGrant;
    private String grantor;
    private LocalDateTime timestamp;

    public ProxiesPriv() {}

    public ProxiesPriv(ProxiesPriv value) {
        this.host = value.host;
        this.user = value.user;
        this.proxiedHost = value.proxiedHost;
        this.proxiedUser = value.proxiedUser;
        this.withGrant = value.withGrant;
        this.grantor = value.grantor;
        this.timestamp = value.timestamp;
    }

    public ProxiesPriv(
        String host,
        String user,
        String proxiedHost,
        String proxiedUser,
        Byte withGrant,
        String grantor,
        LocalDateTime timestamp
    ) {
        this.host = host;
        this.user = user;
        this.proxiedHost = proxiedHost;
        this.proxiedUser = proxiedUser;
        this.withGrant = withGrant;
        this.grantor = grantor;
        this.timestamp = timestamp;
    }

    /**
     * Getter for <code>mysql.proxies_priv.Host</code>.
     */
    public String getHost() {
        return this.host;
    }

    /**
     * Setter for <code>mysql.proxies_priv.Host</code>.
     */
    public ProxiesPriv setHost(String host) {
        this.host = host;
        return this;
    }

    /**
     * Getter for <code>mysql.proxies_priv.User</code>.
     */
    public String getUser() {
        return this.user;
    }

    /**
     * Setter for <code>mysql.proxies_priv.User</code>.
     */
    public ProxiesPriv setUser(String user) {
        this.user = user;
        return this;
    }

    /**
     * Getter for <code>mysql.proxies_priv.Proxied_host</code>.
     */
    public String getProxiedHost() {
        return this.proxiedHost;
    }

    /**
     * Setter for <code>mysql.proxies_priv.Proxied_host</code>.
     */
    public ProxiesPriv setProxiedHost(String proxiedHost) {
        this.proxiedHost = proxiedHost;
        return this;
    }

    /**
     * Getter for <code>mysql.proxies_priv.Proxied_user</code>.
     */
    public String getProxiedUser() {
        return this.proxiedUser;
    }

    /**
     * Setter for <code>mysql.proxies_priv.Proxied_user</code>.
     */
    public ProxiesPriv setProxiedUser(String proxiedUser) {
        this.proxiedUser = proxiedUser;
        return this;
    }

    /**
     * Getter for <code>mysql.proxies_priv.With_grant</code>.
     */
    public Byte getWithGrant() {
        return this.withGrant;
    }

    /**
     * Setter for <code>mysql.proxies_priv.With_grant</code>.
     */
    public ProxiesPriv setWithGrant(Byte withGrant) {
        this.withGrant = withGrant;
        return this;
    }

    /**
     * Getter for <code>mysql.proxies_priv.Grantor</code>.
     */
    public String getGrantor() {
        return this.grantor;
    }

    /**
     * Setter for <code>mysql.proxies_priv.Grantor</code>.
     */
    public ProxiesPriv setGrantor(String grantor) {
        this.grantor = grantor;
        return this;
    }

    /**
     * Getter for <code>mysql.proxies_priv.Timestamp</code>.
     */
    public LocalDateTime getTimestamp() {
        return this.timestamp;
    }

    /**
     * Setter for <code>mysql.proxies_priv.Timestamp</code>.
     */
    public ProxiesPriv setTimestamp(LocalDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ProxiesPriv other = (ProxiesPriv) obj;
        if (this.host == null) {
            if (other.host != null)
                return false;
        }
        else if (!this.host.equals(other.host))
            return false;
        if (this.user == null) {
            if (other.user != null)
                return false;
        }
        else if (!this.user.equals(other.user))
            return false;
        if (this.proxiedHost == null) {
            if (other.proxiedHost != null)
                return false;
        }
        else if (!this.proxiedHost.equals(other.proxiedHost))
            return false;
        if (this.proxiedUser == null) {
            if (other.proxiedUser != null)
                return false;
        }
        else if (!this.proxiedUser.equals(other.proxiedUser))
            return false;
        if (this.withGrant == null) {
            if (other.withGrant != null)
                return false;
        }
        else if (!this.withGrant.equals(other.withGrant))
            return false;
        if (this.grantor == null) {
            if (other.grantor != null)
                return false;
        }
        else if (!this.grantor.equals(other.grantor))
            return false;
        if (this.timestamp == null) {
            if (other.timestamp != null)
                return false;
        }
        else if (!this.timestamp.equals(other.timestamp))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.host == null) ? 0 : this.host.hashCode());
        result = prime * result + ((this.user == null) ? 0 : this.user.hashCode());
        result = prime * result + ((this.proxiedHost == null) ? 0 : this.proxiedHost.hashCode());
        result = prime * result + ((this.proxiedUser == null) ? 0 : this.proxiedUser.hashCode());
        result = prime * result + ((this.withGrant == null) ? 0 : this.withGrant.hashCode());
        result = prime * result + ((this.grantor == null) ? 0 : this.grantor.hashCode());
        result = prime * result + ((this.timestamp == null) ? 0 : this.timestamp.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ProxiesPriv (");

        sb.append(host);
        sb.append(", ").append(user);
        sb.append(", ").append(proxiedHost);
        sb.append(", ").append(proxiedUser);
        sb.append(", ").append(withGrant);
        sb.append(", ").append(grantor);
        sb.append(", ").append(timestamp);

        sb.append(")");
        return sb.toString();
    }
}
