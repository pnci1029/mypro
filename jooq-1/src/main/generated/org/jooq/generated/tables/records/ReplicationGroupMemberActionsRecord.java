/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import org.jooq.Record2;
import org.jooq.generated.tables.ReplicationGroupMemberActions;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;


/**
 * The member actions configuration.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReplicationGroupMemberActionsRecord extends UpdatableRecordImpl<ReplicationGroupMemberActionsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mysql.replication_group_member_actions.name</code>. The
     * action name.
     */
    public ReplicationGroupMemberActionsRecord setName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>mysql.replication_group_member_actions.name</code>. The
     * action name.
     */
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>mysql.replication_group_member_actions.event</code>. The
     * event that will trigger the action.
     */
    public ReplicationGroupMemberActionsRecord setEvent(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>mysql.replication_group_member_actions.event</code>. The
     * event that will trigger the action.
     */
    public String getEvent() {
        return (String) get(1);
    }

    /**
     * Setter for <code>mysql.replication_group_member_actions.enabled</code>.
     * Whether the action is enabled.
     */
    public ReplicationGroupMemberActionsRecord setEnabled(Byte value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>mysql.replication_group_member_actions.enabled</code>.
     * Whether the action is enabled.
     */
    public Byte getEnabled() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>mysql.replication_group_member_actions.type</code>. The
     * action type.
     */
    public ReplicationGroupMemberActionsRecord setType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>mysql.replication_group_member_actions.type</code>. The
     * action type.
     */
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>mysql.replication_group_member_actions.priority</code>.
     * The order on which the action will be run, value between 1 and 100, lower
     * values first.
     */
    public ReplicationGroupMemberActionsRecord setPriority(UByte value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>mysql.replication_group_member_actions.priority</code>.
     * The order on which the action will be run, value between 1 and 100, lower
     * values first.
     */
    public UByte getPriority() {
        return (UByte) get(4);
    }

    /**
     * Setter for
     * <code>mysql.replication_group_member_actions.error_handling</code>. On
     * errors during the action will be handled: IGNORE, CRITICAL.
     */
    public ReplicationGroupMemberActionsRecord setErrorHandling(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>mysql.replication_group_member_actions.error_handling</code>. On
     * errors during the action will be handled: IGNORE, CRITICAL.
     */
    public String getErrorHandling() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReplicationGroupMemberActionsRecord
     */
    public ReplicationGroupMemberActionsRecord() {
        super(ReplicationGroupMemberActions.REPLICATION_GROUP_MEMBER_ACTIONS);
    }

    /**
     * Create a detached, initialised ReplicationGroupMemberActionsRecord
     */
    public ReplicationGroupMemberActionsRecord(String name, String event, Byte enabled, String type, UByte priority, String errorHandling) {
        super(ReplicationGroupMemberActions.REPLICATION_GROUP_MEMBER_ACTIONS);

        setName(name);
        setEvent(event);
        setEnabled(enabled);
        setType(type);
        setPriority(priority);
        setErrorHandling(errorHandling);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ReplicationGroupMemberActionsRecord
     */
    public ReplicationGroupMemberActionsRecord(org.jooq.generated.tables.pojos.ReplicationGroupMemberActions value) {
        super(ReplicationGroupMemberActions.REPLICATION_GROUP_MEMBER_ACTIONS);

        if (value != null) {
            setName(value.getName());
            setEvent(value.getEvent());
            setEnabled(value.getEnabled());
            setType(value.getType());
            setPriority(value.getPriority());
            setErrorHandling(value.getErrorHandling());
            resetChangedOnNotNull();
        }
    }
}
