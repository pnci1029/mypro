/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.Plugin;
import org.jooq.generated.tables.records.PluginRecord;
import org.jooq.impl.DAOImpl;


/**
 * MySQL plugins
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PluginDao extends DAOImpl<PluginRecord, org.jooq.generated.tables.pojos.Plugin, String> {

    /**
     * Create a new PluginDao without any configuration
     */
    public PluginDao() {
        super(Plugin.PLUGIN, org.jooq.generated.tables.pojos.Plugin.class);
    }

    /**
     * Create a new PluginDao with an attached configuration
     */
    public PluginDao(Configuration configuration) {
        super(Plugin.PLUGIN, org.jooq.generated.tables.pojos.Plugin.class, configuration);
    }

    @Override
    public String getId(org.jooq.generated.tables.pojos.Plugin object) {
        return object.getName();
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Plugin> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Plugin.PLUGIN.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Plugin> fetchByName(String... values) {
        return fetch(Plugin.PLUGIN.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public org.jooq.generated.tables.pojos.Plugin fetchOneByName(String value) {
        return fetchOne(Plugin.PLUGIN.NAME, value);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public Optional<org.jooq.generated.tables.pojos.Plugin> fetchOptionalByName(String value) {
        return fetchOptional(Plugin.PLUGIN.NAME, value);
    }

    /**
     * Fetch records that have <code>dl BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.jooq.generated.tables.pojos.Plugin> fetchRangeOfDl(String lowerInclusive, String upperInclusive) {
        return fetchRange(Plugin.PLUGIN.DL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dl IN (values)</code>
     */
    public List<org.jooq.generated.tables.pojos.Plugin> fetchByDl(String... values) {
        return fetch(Plugin.PLUGIN.DL, values);
    }
}
