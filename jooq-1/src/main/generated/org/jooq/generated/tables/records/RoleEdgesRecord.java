/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import org.jooq.Record4;
import org.jooq.generated.enums.RoleEdgesWithAdminOption;
import org.jooq.generated.tables.JRoleEdges;
import org.jooq.generated.tables.pojos.RoleEdges;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Role hierarchy and role grants
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoleEdgesRecord extends UpdatableRecordImpl<RoleEdgesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mysql.role_edges.FROM_HOST</code>.
     */
    public RoleEdgesRecord setFromHost(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>mysql.role_edges.FROM_HOST</code>.
     */
    public String getFromHost() {
        return (String) get(0);
    }

    /**
     * Setter for <code>mysql.role_edges.FROM_USER</code>.
     */
    public RoleEdgesRecord setFromUser(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>mysql.role_edges.FROM_USER</code>.
     */
    public String getFromUser() {
        return (String) get(1);
    }

    /**
     * Setter for <code>mysql.role_edges.TO_HOST</code>.
     */
    public RoleEdgesRecord setToHost(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>mysql.role_edges.TO_HOST</code>.
     */
    public String getToHost() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mysql.role_edges.TO_USER</code>.
     */
    public RoleEdgesRecord setToUser(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>mysql.role_edges.TO_USER</code>.
     */
    public String getToUser() {
        return (String) get(3);
    }

    /**
     * Setter for <code>mysql.role_edges.WITH_ADMIN_OPTION</code>.
     */
    public RoleEdgesRecord setWithAdminOption(RoleEdgesWithAdminOption value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>mysql.role_edges.WITH_ADMIN_OPTION</code>.
     */
    public RoleEdgesWithAdminOption getWithAdminOption() {
        return (RoleEdgesWithAdminOption) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record4<String, String, String, String> key() {
        return (Record4) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoleEdgesRecord
     */
    public RoleEdgesRecord() {
        super(JRoleEdges.ROLE_EDGES);
    }

    /**
     * Create a detached, initialised RoleEdgesRecord
     */
    public RoleEdgesRecord(String fromHost, String fromUser, String toHost, String toUser, RoleEdgesWithAdminOption withAdminOption) {
        super(JRoleEdges.ROLE_EDGES);

        setFromHost(fromHost);
        setFromUser(fromUser);
        setToHost(toHost);
        setToUser(toUser);
        setWithAdminOption(withAdminOption);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised RoleEdgesRecord
     */
    public RoleEdgesRecord(RoleEdges value) {
        super(JRoleEdges.ROLE_EDGES);

        if (value != null) {
            setFromHost(value.getFromHost());
            setFromUser(value.getFromUser());
            setToHost(value.getToHost());
            setToUser(value.getToUser());
            setWithAdminOption(value.getWithAdminOption());
            resetChangedOnNotNull();
        }
    }
}
