/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.JComponent;
import org.jooq.generated.tables.pojos.Component;
import org.jooq.generated.tables.records.ComponentRecord;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UInteger;


/**
 * Components
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ComponentDao extends DAOImpl<ComponentRecord, Component, UInteger> {

    /**
     * Create a new ComponentDao without any configuration
     */
    public ComponentDao() {
        super(JComponent.COMPONENT, Component.class);
    }

    /**
     * Create a new ComponentDao with an attached configuration
     */
    public ComponentDao(Configuration configuration) {
        super(JComponent.COMPONENT, Component.class, configuration);
    }

    @Override
    public UInteger getId(Component object) {
        return object.getComponentId();
    }

    /**
     * Fetch records that have <code>component_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Component> fetchRangeOfJComponentId(UInteger lowerInclusive, UInteger upperInclusive) {
        return fetchRange(JComponent.COMPONENT.COMPONENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>component_id IN (values)</code>
     */
    public List<Component> fetchByJComponentId(UInteger... values) {
        return fetch(JComponent.COMPONENT.COMPONENT_ID, values);
    }

    /**
     * Fetch a unique record that has <code>component_id = value</code>
     */
    public Component fetchOneByJComponentId(UInteger value) {
        return fetchOne(JComponent.COMPONENT.COMPONENT_ID, value);
    }

    /**
     * Fetch a unique record that has <code>component_id = value</code>
     */
    public Optional<Component> fetchOptionalByJComponentId(UInteger value) {
        return fetchOptional(JComponent.COMPONENT.COMPONENT_ID, value);
    }

    /**
     * Fetch records that have <code>component_group_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<Component> fetchRangeOfJComponentGroupId(UInteger lowerInclusive, UInteger upperInclusive) {
        return fetchRange(JComponent.COMPONENT.COMPONENT_GROUP_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>component_group_id IN (values)</code>
     */
    public List<Component> fetchByJComponentGroupId(UInteger... values) {
        return fetch(JComponent.COMPONENT.COMPONENT_GROUP_ID, values);
    }

    /**
     * Fetch records that have <code>component_urn BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Component> fetchRangeOfJComponentUrn(String lowerInclusive, String upperInclusive) {
        return fetchRange(JComponent.COMPONENT.COMPONENT_URN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>component_urn IN (values)</code>
     */
    public List<Component> fetchByJComponentUrn(String... values) {
        return fetch(JComponent.COMPONENT.COMPONENT_URN, values);
    }
}
