/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record3;
import org.jooq.generated.enums.DbAlterPriv;
import org.jooq.generated.enums.DbAlterRoutinePriv;
import org.jooq.generated.enums.DbCreatePriv;
import org.jooq.generated.enums.DbCreateRoutinePriv;
import org.jooq.generated.enums.DbCreateTmpTablePriv;
import org.jooq.generated.enums.DbCreateViewPriv;
import org.jooq.generated.enums.DbDeletePriv;
import org.jooq.generated.enums.DbDropPriv;
import org.jooq.generated.enums.DbEventPriv;
import org.jooq.generated.enums.DbExecutePriv;
import org.jooq.generated.enums.DbGrantPriv;
import org.jooq.generated.enums.DbIndexPriv;
import org.jooq.generated.enums.DbInsertPriv;
import org.jooq.generated.enums.DbLockTablesPriv;
import org.jooq.generated.enums.DbReferencesPriv;
import org.jooq.generated.enums.DbSelectPriv;
import org.jooq.generated.enums.DbShowViewPriv;
import org.jooq.generated.enums.DbTriggerPriv;
import org.jooq.generated.enums.DbUpdatePriv;
import org.jooq.generated.tables.JDb;
import org.jooq.generated.tables.pojos.Db;
import org.jooq.generated.tables.records.DbRecord;
import org.jooq.impl.DAOImpl;


/**
 * Database privileges
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DbDao extends DAOImpl<DbRecord, Db, Record3<String, String, String>> {

    /**
     * Create a new DbDao without any configuration
     */
    public DbDao() {
        super(JDb.DB, Db.class);
    }

    /**
     * Create a new DbDao with an attached configuration
     */
    public DbDao(Configuration configuration) {
        super(JDb.DB, Db.class, configuration);
    }

    @Override
    public Record3<String, String, String> getId(Db object) {
        return compositeKeyRecord(object.getHost(), object.getUser(), object.getDb());
    }

    /**
     * Fetch records that have <code>Host BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Db> fetchRangeOfJHost(String lowerInclusive, String upperInclusive) {
        return fetchRange(JDb.DB.HOST, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Host IN (values)</code>
     */
    public List<Db> fetchByJHost(String... values) {
        return fetch(JDb.DB.HOST, values);
    }

    /**
     * Fetch records that have <code>Db BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Db> fetchRangeOfJDb(String lowerInclusive, String upperInclusive) {
        return fetchRange(JDb.DB.DB_, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Db IN (values)</code>
     */
    public List<Db> fetchByJDb(String... values) {
        return fetch(JDb.DB.DB_, values);
    }

    /**
     * Fetch records that have <code>User BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Db> fetchRangeOfJUser(String lowerInclusive, String upperInclusive) {
        return fetchRange(JDb.DB.USER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>User IN (values)</code>
     */
    public List<Db> fetchByJUser(String... values) {
        return fetch(JDb.DB.USER, values);
    }

    /**
     * Fetch records that have <code>Select_priv BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Db> fetchRangeOfJSelectPriv(DbSelectPriv lowerInclusive, DbSelectPriv upperInclusive) {
        return fetchRange(JDb.DB.SELECT_PRIV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Select_priv IN (values)</code>
     */
    public List<Db> fetchByJSelectPriv(DbSelectPriv... values) {
        return fetch(JDb.DB.SELECT_PRIV, values);
    }

    /**
     * Fetch records that have <code>Insert_priv BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Db> fetchRangeOfJInsertPriv(DbInsertPriv lowerInclusive, DbInsertPriv upperInclusive) {
        return fetchRange(JDb.DB.INSERT_PRIV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Insert_priv IN (values)</code>
     */
    public List<Db> fetchByJInsertPriv(DbInsertPriv... values) {
        return fetch(JDb.DB.INSERT_PRIV, values);
    }

    /**
     * Fetch records that have <code>Update_priv BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Db> fetchRangeOfJUpdatePriv(DbUpdatePriv lowerInclusive, DbUpdatePriv upperInclusive) {
        return fetchRange(JDb.DB.UPDATE_PRIV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Update_priv IN (values)</code>
     */
    public List<Db> fetchByJUpdatePriv(DbUpdatePriv... values) {
        return fetch(JDb.DB.UPDATE_PRIV, values);
    }

    /**
     * Fetch records that have <code>Delete_priv BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Db> fetchRangeOfJDeletePriv(DbDeletePriv lowerInclusive, DbDeletePriv upperInclusive) {
        return fetchRange(JDb.DB.DELETE_PRIV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Delete_priv IN (values)</code>
     */
    public List<Db> fetchByJDeletePriv(DbDeletePriv... values) {
        return fetch(JDb.DB.DELETE_PRIV, values);
    }

    /**
     * Fetch records that have <code>Create_priv BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Db> fetchRangeOfJCreatePriv(DbCreatePriv lowerInclusive, DbCreatePriv upperInclusive) {
        return fetchRange(JDb.DB.CREATE_PRIV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Create_priv IN (values)</code>
     */
    public List<Db> fetchByJCreatePriv(DbCreatePriv... values) {
        return fetch(JDb.DB.CREATE_PRIV, values);
    }

    /**
     * Fetch records that have <code>Drop_priv BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Db> fetchRangeOfJDropPriv(DbDropPriv lowerInclusive, DbDropPriv upperInclusive) {
        return fetchRange(JDb.DB.DROP_PRIV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Drop_priv IN (values)</code>
     */
    public List<Db> fetchByJDropPriv(DbDropPriv... values) {
        return fetch(JDb.DB.DROP_PRIV, values);
    }

    /**
     * Fetch records that have <code>Grant_priv BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Db> fetchRangeOfJGrantPriv(DbGrantPriv lowerInclusive, DbGrantPriv upperInclusive) {
        return fetchRange(JDb.DB.GRANT_PRIV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Grant_priv IN (values)</code>
     */
    public List<Db> fetchByJGrantPriv(DbGrantPriv... values) {
        return fetch(JDb.DB.GRANT_PRIV, values);
    }

    /**
     * Fetch records that have <code>References_priv BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Db> fetchRangeOfJReferencesPriv(DbReferencesPriv lowerInclusive, DbReferencesPriv upperInclusive) {
        return fetchRange(JDb.DB.REFERENCES_PRIV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>References_priv IN (values)</code>
     */
    public List<Db> fetchByJReferencesPriv(DbReferencesPriv... values) {
        return fetch(JDb.DB.REFERENCES_PRIV, values);
    }

    /**
     * Fetch records that have <code>Index_priv BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Db> fetchRangeOfJIndexPriv(DbIndexPriv lowerInclusive, DbIndexPriv upperInclusive) {
        return fetchRange(JDb.DB.INDEX_PRIV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Index_priv IN (values)</code>
     */
    public List<Db> fetchByJIndexPriv(DbIndexPriv... values) {
        return fetch(JDb.DB.INDEX_PRIV, values);
    }

    /**
     * Fetch records that have <code>Alter_priv BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Db> fetchRangeOfJAlterPriv(DbAlterPriv lowerInclusive, DbAlterPriv upperInclusive) {
        return fetchRange(JDb.DB.ALTER_PRIV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Alter_priv IN (values)</code>
     */
    public List<Db> fetchByJAlterPriv(DbAlterPriv... values) {
        return fetch(JDb.DB.ALTER_PRIV, values);
    }

    /**
     * Fetch records that have <code>Create_tmp_table_priv BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<Db> fetchRangeOfJCreateTmpTablePriv(DbCreateTmpTablePriv lowerInclusive, DbCreateTmpTablePriv upperInclusive) {
        return fetchRange(JDb.DB.CREATE_TMP_TABLE_PRIV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Create_tmp_table_priv IN (values)</code>
     */
    public List<Db> fetchByJCreateTmpTablePriv(DbCreateTmpTablePriv... values) {
        return fetch(JDb.DB.CREATE_TMP_TABLE_PRIV, values);
    }

    /**
     * Fetch records that have <code>Lock_tables_priv BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Db> fetchRangeOfJLockTablesPriv(DbLockTablesPriv lowerInclusive, DbLockTablesPriv upperInclusive) {
        return fetchRange(JDb.DB.LOCK_TABLES_PRIV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Lock_tables_priv IN (values)</code>
     */
    public List<Db> fetchByJLockTablesPriv(DbLockTablesPriv... values) {
        return fetch(JDb.DB.LOCK_TABLES_PRIV, values);
    }

    /**
     * Fetch records that have <code>Create_view_priv BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Db> fetchRangeOfJCreateViewPriv(DbCreateViewPriv lowerInclusive, DbCreateViewPriv upperInclusive) {
        return fetchRange(JDb.DB.CREATE_VIEW_PRIV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Create_view_priv IN (values)</code>
     */
    public List<Db> fetchByJCreateViewPriv(DbCreateViewPriv... values) {
        return fetch(JDb.DB.CREATE_VIEW_PRIV, values);
    }

    /**
     * Fetch records that have <code>Show_view_priv BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Db> fetchRangeOfJShowViewPriv(DbShowViewPriv lowerInclusive, DbShowViewPriv upperInclusive) {
        return fetchRange(JDb.DB.SHOW_VIEW_PRIV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Show_view_priv IN (values)</code>
     */
    public List<Db> fetchByJShowViewPriv(DbShowViewPriv... values) {
        return fetch(JDb.DB.SHOW_VIEW_PRIV, values);
    }

    /**
     * Fetch records that have <code>Create_routine_priv BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<Db> fetchRangeOfJCreateRoutinePriv(DbCreateRoutinePriv lowerInclusive, DbCreateRoutinePriv upperInclusive) {
        return fetchRange(JDb.DB.CREATE_ROUTINE_PRIV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Create_routine_priv IN (values)</code>
     */
    public List<Db> fetchByJCreateRoutinePriv(DbCreateRoutinePriv... values) {
        return fetch(JDb.DB.CREATE_ROUTINE_PRIV, values);
    }

    /**
     * Fetch records that have <code>Alter_routine_priv BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<Db> fetchRangeOfJAlterRoutinePriv(DbAlterRoutinePriv lowerInclusive, DbAlterRoutinePriv upperInclusive) {
        return fetchRange(JDb.DB.ALTER_ROUTINE_PRIV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Alter_routine_priv IN (values)</code>
     */
    public List<Db> fetchByJAlterRoutinePriv(DbAlterRoutinePriv... values) {
        return fetch(JDb.DB.ALTER_ROUTINE_PRIV, values);
    }

    /**
     * Fetch records that have <code>Execute_priv BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Db> fetchRangeOfJExecutePriv(DbExecutePriv lowerInclusive, DbExecutePriv upperInclusive) {
        return fetchRange(JDb.DB.EXECUTE_PRIV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Execute_priv IN (values)</code>
     */
    public List<Db> fetchByJExecutePriv(DbExecutePriv... values) {
        return fetch(JDb.DB.EXECUTE_PRIV, values);
    }

    /**
     * Fetch records that have <code>Event_priv BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Db> fetchRangeOfJEventPriv(DbEventPriv lowerInclusive, DbEventPriv upperInclusive) {
        return fetchRange(JDb.DB.EVENT_PRIV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Event_priv IN (values)</code>
     */
    public List<Db> fetchByJEventPriv(DbEventPriv... values) {
        return fetch(JDb.DB.EVENT_PRIV, values);
    }

    /**
     * Fetch records that have <code>Trigger_priv BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<Db> fetchRangeOfJTriggerPriv(DbTriggerPriv lowerInclusive, DbTriggerPriv upperInclusive) {
        return fetchRange(JDb.DB.TRIGGER_PRIV, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Trigger_priv IN (values)</code>
     */
    public List<Db> fetchByJTriggerPriv(DbTriggerPriv... values) {
        return fetch(JDb.DB.TRIGGER_PRIV, values);
    }
}
