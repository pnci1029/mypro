/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;

import org.jooq.types.UInteger;


/**
 * Time zone transitions
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TimeZoneTransition implements Serializable {

    private static final long serialVersionUID = 1L;

    private UInteger timeZoneId;
    private Long transitionTime;
    private UInteger transitionTypeId;

    public TimeZoneTransition() {}

    public TimeZoneTransition(TimeZoneTransition value) {
        this.timeZoneId = value.timeZoneId;
        this.transitionTime = value.transitionTime;
        this.transitionTypeId = value.transitionTypeId;
    }

    public TimeZoneTransition(
        UInteger timeZoneId,
        Long transitionTime,
        UInteger transitionTypeId
    ) {
        this.timeZoneId = timeZoneId;
        this.transitionTime = transitionTime;
        this.transitionTypeId = transitionTypeId;
    }

    /**
     * Getter for <code>mysql.time_zone_transition.Time_zone_id</code>.
     */
    public UInteger getTimeZoneId() {
        return this.timeZoneId;
    }

    /**
     * Setter for <code>mysql.time_zone_transition.Time_zone_id</code>.
     */
    public TimeZoneTransition setTimeZoneId(UInteger timeZoneId) {
        this.timeZoneId = timeZoneId;
        return this;
    }

    /**
     * Getter for <code>mysql.time_zone_transition.Transition_time</code>.
     */
    public Long getTransitionTime() {
        return this.transitionTime;
    }

    /**
     * Setter for <code>mysql.time_zone_transition.Transition_time</code>.
     */
    public TimeZoneTransition setTransitionTime(Long transitionTime) {
        this.transitionTime = transitionTime;
        return this;
    }

    /**
     * Getter for <code>mysql.time_zone_transition.Transition_type_id</code>.
     */
    public UInteger getTransitionTypeId() {
        return this.transitionTypeId;
    }

    /**
     * Setter for <code>mysql.time_zone_transition.Transition_type_id</code>.
     */
    public TimeZoneTransition setTransitionTypeId(UInteger transitionTypeId) {
        this.transitionTypeId = transitionTypeId;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final TimeZoneTransition other = (TimeZoneTransition) obj;
        if (this.timeZoneId == null) {
            if (other.timeZoneId != null)
                return false;
        }
        else if (!this.timeZoneId.equals(other.timeZoneId))
            return false;
        if (this.transitionTime == null) {
            if (other.transitionTime != null)
                return false;
        }
        else if (!this.transitionTime.equals(other.transitionTime))
            return false;
        if (this.transitionTypeId == null) {
            if (other.transitionTypeId != null)
                return false;
        }
        else if (!this.transitionTypeId.equals(other.transitionTypeId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.timeZoneId == null) ? 0 : this.timeZoneId.hashCode());
        result = prime * result + ((this.transitionTime == null) ? 0 : this.transitionTime.hashCode());
        result = prime * result + ((this.transitionTypeId == null) ? 0 : this.transitionTypeId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TimeZoneTransition (");

        sb.append(timeZoneId);
        sb.append(", ").append(transitionTime);
        sb.append(", ").append(transitionTypeId);

        sb.append(")");
        return sb.toString();
    }
}
