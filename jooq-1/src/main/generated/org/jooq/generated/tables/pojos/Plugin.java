/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;


/**
 * MySQL plugins
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Plugin implements Serializable {

    private static final long serialVersionUID = 1L;

    private String name;
    private String dl;

    public Plugin() {}

    public Plugin(Plugin value) {
        this.name = value.name;
        this.dl = value.dl;
    }

    public Plugin(
        String name,
        String dl
    ) {
        this.name = name;
        this.dl = dl;
    }

    /**
     * Getter for <code>mysql.plugin.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>mysql.plugin.name</code>.
     */
    public Plugin setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>mysql.plugin.dl</code>.
     */
    public String getDl() {
        return this.dl;
    }

    /**
     * Setter for <code>mysql.plugin.dl</code>.
     */
    public Plugin setDl(String dl) {
        this.dl = dl;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Plugin other = (Plugin) obj;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.dl == null) {
            if (other.dl != null)
                return false;
        }
        else if (!this.dl.equals(other.dl))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.dl == null) ? 0 : this.dl.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Plugin (");

        sb.append(name);
        sb.append(", ").append(dl);

        sb.append(")");
        return sb.toString();
    }
}
