/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record2;
import org.jooq.generated.tables.JInnodbTableStats;
import org.jooq.generated.tables.pojos.InnodbTableStats;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbTableStatsRecord extends UpdatableRecordImpl<InnodbTableStatsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mysql.innodb_table_stats.database_name</code>.
     */
    public InnodbTableStatsRecord setDatabaseName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>mysql.innodb_table_stats.database_name</code>.
     */
    public String getDatabaseName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>mysql.innodb_table_stats.table_name</code>.
     */
    public InnodbTableStatsRecord setTableName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>mysql.innodb_table_stats.table_name</code>.
     */
    public String getTableName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>mysql.innodb_table_stats.last_update</code>.
     */
    public InnodbTableStatsRecord setLastUpdate(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>mysql.innodb_table_stats.last_update</code>.
     */
    public LocalDateTime getLastUpdate() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>mysql.innodb_table_stats.n_rows</code>.
     */
    public InnodbTableStatsRecord setNRows(ULong value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>mysql.innodb_table_stats.n_rows</code>.
     */
    public ULong getNRows() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>mysql.innodb_table_stats.clustered_index_size</code>.
     */
    public InnodbTableStatsRecord setClusteredIndexSize(ULong value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>mysql.innodb_table_stats.clustered_index_size</code>.
     */
    public ULong getClusteredIndexSize() {
        return (ULong) get(4);
    }

    /**
     * Setter for
     * <code>mysql.innodb_table_stats.sum_of_other_index_sizes</code>.
     */
    public InnodbTableStatsRecord setSumOfOtherIndexSizes(ULong value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>mysql.innodb_table_stats.sum_of_other_index_sizes</code>.
     */
    public ULong getSumOfOtherIndexSizes() {
        return (ULong) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InnodbTableStatsRecord
     */
    public InnodbTableStatsRecord() {
        super(JInnodbTableStats.INNODB_TABLE_STATS);
    }

    /**
     * Create a detached, initialised InnodbTableStatsRecord
     */
    public InnodbTableStatsRecord(String databaseName, String tableName, LocalDateTime lastUpdate, ULong nRows, ULong clusteredIndexSize, ULong sumOfOtherIndexSizes) {
        super(JInnodbTableStats.INNODB_TABLE_STATS);

        setDatabaseName(databaseName);
        setTableName(tableName);
        setLastUpdate(lastUpdate);
        setNRows(nRows);
        setClusteredIndexSize(clusteredIndexSize);
        setSumOfOtherIndexSizes(sumOfOtherIndexSizes);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised InnodbTableStatsRecord
     */
    public InnodbTableStatsRecord(InnodbTableStats value) {
        super(JInnodbTableStats.INNODB_TABLE_STATS);

        if (value != null) {
            setDatabaseName(value.getDatabaseName());
            setTableName(value.getTableName());
            setLastUpdate(value.getLastUpdate());
            setNRows(value.getNRows());
            setClusteredIndexSize(value.getClusteredIndexSize());
            setSumOfOtherIndexSizes(value.getSumOfOtherIndexSizes());
            resetChangedOnNotNull();
        }
    }
}
