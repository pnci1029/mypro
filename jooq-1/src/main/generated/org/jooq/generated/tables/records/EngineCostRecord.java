/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record3;
import org.jooq.generated.tables.JEngineCost;
import org.jooq.generated.tables.pojos.EngineCost;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EngineCostRecord extends UpdatableRecordImpl<EngineCostRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mysql.engine_cost.engine_name</code>.
     */
    public EngineCostRecord setEngineName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>mysql.engine_cost.engine_name</code>.
     */
    public String getEngineName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>mysql.engine_cost.device_type</code>.
     */
    public EngineCostRecord setDeviceType(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>mysql.engine_cost.device_type</code>.
     */
    public Integer getDeviceType() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>mysql.engine_cost.cost_name</code>.
     */
    public EngineCostRecord setCostName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>mysql.engine_cost.cost_name</code>.
     */
    public String getCostName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mysql.engine_cost.cost_value</code>.
     */
    public EngineCostRecord setCostValue(Double value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>mysql.engine_cost.cost_value</code>.
     */
    public Double getCostValue() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>mysql.engine_cost.last_update</code>.
     */
    public EngineCostRecord setLastUpdate(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>mysql.engine_cost.last_update</code>.
     */
    public LocalDateTime getLastUpdate() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>mysql.engine_cost.comment</code>.
     */
    public EngineCostRecord setComment(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>mysql.engine_cost.comment</code>.
     */
    public String getComment() {
        return (String) get(5);
    }

    /**
     * Setter for <code>mysql.engine_cost.default_value</code>.
     */
    public EngineCostRecord setDefaultValue(Double value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>mysql.engine_cost.default_value</code>.
     */
    public Double getDefaultValue() {
        return (Double) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<String, String, Integer> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EngineCostRecord
     */
    public EngineCostRecord() {
        super(JEngineCost.ENGINE_COST);
    }

    /**
     * Create a detached, initialised EngineCostRecord
     */
    public EngineCostRecord(String engineName, Integer deviceType, String costName, Double costValue, LocalDateTime lastUpdate, String comment, Double defaultValue) {
        super(JEngineCost.ENGINE_COST);

        setEngineName(engineName);
        setDeviceType(deviceType);
        setCostName(costName);
        setCostValue(costValue);
        setLastUpdate(lastUpdate);
        setComment(comment);
        setDefaultValue(defaultValue);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised EngineCostRecord
     */
    public EngineCostRecord(EngineCost value) {
        super(JEngineCost.ENGINE_COST);

        if (value != null) {
            setEngineName(value.getEngineName());
            setDeviceType(value.getDeviceType());
            setCostName(value.getCostName());
            setCostValue(value.getCostValue());
            setLastUpdate(value.getLastUpdate());
            setComment(value.getComment());
            setDefaultValue(value.getDefaultValue());
            resetChangedOnNotNull();
        }
    }
}
