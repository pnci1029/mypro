/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;

import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbTableStats implements Serializable {

    private static final long serialVersionUID = 1L;

    private String databaseName;
    private String tableName;
    private LocalDateTime lastUpdate;
    private ULong nRows;
    private ULong clusteredIndexSize;
    private ULong sumOfOtherIndexSizes;

    public InnodbTableStats() {}

    public InnodbTableStats(InnodbTableStats value) {
        this.databaseName = value.databaseName;
        this.tableName = value.tableName;
        this.lastUpdate = value.lastUpdate;
        this.nRows = value.nRows;
        this.clusteredIndexSize = value.clusteredIndexSize;
        this.sumOfOtherIndexSizes = value.sumOfOtherIndexSizes;
    }

    public InnodbTableStats(
        String databaseName,
        String tableName,
        LocalDateTime lastUpdate,
        ULong nRows,
        ULong clusteredIndexSize,
        ULong sumOfOtherIndexSizes
    ) {
        this.databaseName = databaseName;
        this.tableName = tableName;
        this.lastUpdate = lastUpdate;
        this.nRows = nRows;
        this.clusteredIndexSize = clusteredIndexSize;
        this.sumOfOtherIndexSizes = sumOfOtherIndexSizes;
    }

    /**
     * Getter for <code>mysql.innodb_table_stats.database_name</code>.
     */
    public String getDatabaseName() {
        return this.databaseName;
    }

    /**
     * Setter for <code>mysql.innodb_table_stats.database_name</code>.
     */
    public InnodbTableStats setDatabaseName(String databaseName) {
        this.databaseName = databaseName;
        return this;
    }

    /**
     * Getter for <code>mysql.innodb_table_stats.table_name</code>.
     */
    public String getTableName() {
        return this.tableName;
    }

    /**
     * Setter for <code>mysql.innodb_table_stats.table_name</code>.
     */
    public InnodbTableStats setTableName(String tableName) {
        this.tableName = tableName;
        return this;
    }

    /**
     * Getter for <code>mysql.innodb_table_stats.last_update</code>.
     */
    public LocalDateTime getLastUpdate() {
        return this.lastUpdate;
    }

    /**
     * Setter for <code>mysql.innodb_table_stats.last_update</code>.
     */
    public InnodbTableStats setLastUpdate(LocalDateTime lastUpdate) {
        this.lastUpdate = lastUpdate;
        return this;
    }

    /**
     * Getter for <code>mysql.innodb_table_stats.n_rows</code>.
     */
    public ULong getNRows() {
        return this.nRows;
    }

    /**
     * Setter for <code>mysql.innodb_table_stats.n_rows</code>.
     */
    public InnodbTableStats setNRows(ULong nRows) {
        this.nRows = nRows;
        return this;
    }

    /**
     * Getter for <code>mysql.innodb_table_stats.clustered_index_size</code>.
     */
    public ULong getClusteredIndexSize() {
        return this.clusteredIndexSize;
    }

    /**
     * Setter for <code>mysql.innodb_table_stats.clustered_index_size</code>.
     */
    public InnodbTableStats setClusteredIndexSize(ULong clusteredIndexSize) {
        this.clusteredIndexSize = clusteredIndexSize;
        return this;
    }

    /**
     * Getter for
     * <code>mysql.innodb_table_stats.sum_of_other_index_sizes</code>.
     */
    public ULong getSumOfOtherIndexSizes() {
        return this.sumOfOtherIndexSizes;
    }

    /**
     * Setter for
     * <code>mysql.innodb_table_stats.sum_of_other_index_sizes</code>.
     */
    public InnodbTableStats setSumOfOtherIndexSizes(ULong sumOfOtherIndexSizes) {
        this.sumOfOtherIndexSizes = sumOfOtherIndexSizes;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final InnodbTableStats other = (InnodbTableStats) obj;
        if (this.databaseName == null) {
            if (other.databaseName != null)
                return false;
        }
        else if (!this.databaseName.equals(other.databaseName))
            return false;
        if (this.tableName == null) {
            if (other.tableName != null)
                return false;
        }
        else if (!this.tableName.equals(other.tableName))
            return false;
        if (this.lastUpdate == null) {
            if (other.lastUpdate != null)
                return false;
        }
        else if (!this.lastUpdate.equals(other.lastUpdate))
            return false;
        if (this.nRows == null) {
            if (other.nRows != null)
                return false;
        }
        else if (!this.nRows.equals(other.nRows))
            return false;
        if (this.clusteredIndexSize == null) {
            if (other.clusteredIndexSize != null)
                return false;
        }
        else if (!this.clusteredIndexSize.equals(other.clusteredIndexSize))
            return false;
        if (this.sumOfOtherIndexSizes == null) {
            if (other.sumOfOtherIndexSizes != null)
                return false;
        }
        else if (!this.sumOfOtherIndexSizes.equals(other.sumOfOtherIndexSizes))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.databaseName == null) ? 0 : this.databaseName.hashCode());
        result = prime * result + ((this.tableName == null) ? 0 : this.tableName.hashCode());
        result = prime * result + ((this.lastUpdate == null) ? 0 : this.lastUpdate.hashCode());
        result = prime * result + ((this.nRows == null) ? 0 : this.nRows.hashCode());
        result = prime * result + ((this.clusteredIndexSize == null) ? 0 : this.clusteredIndexSize.hashCode());
        result = prime * result + ((this.sumOfOtherIndexSizes == null) ? 0 : this.sumOfOtherIndexSizes.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("InnodbTableStats (");

        sb.append(databaseName);
        sb.append(", ").append(tableName);
        sb.append(", ").append(lastUpdate);
        sb.append(", ").append(nRows);
        sb.append(", ").append(clusteredIndexSize);
        sb.append(", ").append(sumOfOtherIndexSizes);

        sb.append(")");
        return sb.toString();
    }
}
