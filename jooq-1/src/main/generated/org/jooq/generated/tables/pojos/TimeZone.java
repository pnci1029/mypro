/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;

import org.jooq.generated.enums.TimeZoneUseLeapSeconds;
import org.jooq.types.UInteger;


/**
 * Time zones
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TimeZone implements Serializable {

    private static final long serialVersionUID = 1L;

    private UInteger timeZoneId;
    private TimeZoneUseLeapSeconds useLeapSeconds;

    public TimeZone() {}

    public TimeZone(TimeZone value) {
        this.timeZoneId = value.timeZoneId;
        this.useLeapSeconds = value.useLeapSeconds;
    }

    public TimeZone(
        UInteger timeZoneId,
        TimeZoneUseLeapSeconds useLeapSeconds
    ) {
        this.timeZoneId = timeZoneId;
        this.useLeapSeconds = useLeapSeconds;
    }

    /**
     * Getter for <code>mysql.time_zone.Time_zone_id</code>.
     */
    public UInteger getTimeZoneId() {
        return this.timeZoneId;
    }

    /**
     * Setter for <code>mysql.time_zone.Time_zone_id</code>.
     */
    public TimeZone setTimeZoneId(UInteger timeZoneId) {
        this.timeZoneId = timeZoneId;
        return this;
    }

    /**
     * Getter for <code>mysql.time_zone.Use_leap_seconds</code>.
     */
    public TimeZoneUseLeapSeconds getUseLeapSeconds() {
        return this.useLeapSeconds;
    }

    /**
     * Setter for <code>mysql.time_zone.Use_leap_seconds</code>.
     */
    public TimeZone setUseLeapSeconds(TimeZoneUseLeapSeconds useLeapSeconds) {
        this.useLeapSeconds = useLeapSeconds;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final TimeZone other = (TimeZone) obj;
        if (this.timeZoneId == null) {
            if (other.timeZoneId != null)
                return false;
        }
        else if (!this.timeZoneId.equals(other.timeZoneId))
            return false;
        if (this.useLeapSeconds == null) {
            if (other.useLeapSeconds != null)
                return false;
        }
        else if (!this.useLeapSeconds.equals(other.useLeapSeconds))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.timeZoneId == null) ? 0 : this.timeZoneId.hashCode());
        result = prime * result + ((this.useLeapSeconds == null) ? 0 : this.useLeapSeconds.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TimeZone (");

        sb.append(timeZoneId);
        sb.append(", ").append(useLeapSeconds);

        sb.append(")");
        return sb.toString();
    }
}
