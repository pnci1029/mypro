/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.generated.tables.JHelpTopic;
import org.jooq.generated.tables.pojos.HelpTopic;
import org.jooq.generated.tables.records.HelpTopicRecord;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UInteger;
import org.jooq.types.UShort;


/**
 * help topics
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HelpTopicDao extends DAOImpl<HelpTopicRecord, HelpTopic, UInteger> {

    /**
     * Create a new HelpTopicDao without any configuration
     */
    public HelpTopicDao() {
        super(JHelpTopic.HELP_TOPIC, HelpTopic.class);
    }

    /**
     * Create a new HelpTopicDao with an attached configuration
     */
    public HelpTopicDao(Configuration configuration) {
        super(JHelpTopic.HELP_TOPIC, HelpTopic.class, configuration);
    }

    @Override
    public UInteger getId(HelpTopic object) {
        return object.getHelpTopicId();
    }

    /**
     * Fetch records that have <code>help_topic_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<HelpTopic> fetchRangeOfJHelpTopicId(UInteger lowerInclusive, UInteger upperInclusive) {
        return fetchRange(JHelpTopic.HELP_TOPIC.HELP_TOPIC_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>help_topic_id IN (values)</code>
     */
    public List<HelpTopic> fetchByJHelpTopicId(UInteger... values) {
        return fetch(JHelpTopic.HELP_TOPIC.HELP_TOPIC_ID, values);
    }

    /**
     * Fetch a unique record that has <code>help_topic_id = value</code>
     */
    public HelpTopic fetchOneByJHelpTopicId(UInteger value) {
        return fetchOne(JHelpTopic.HELP_TOPIC.HELP_TOPIC_ID, value);
    }

    /**
     * Fetch a unique record that has <code>help_topic_id = value</code>
     */
    public Optional<HelpTopic> fetchOptionalByJHelpTopicId(UInteger value) {
        return fetchOptional(JHelpTopic.HELP_TOPIC.HELP_TOPIC_ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<HelpTopic> fetchRangeOfJName(String lowerInclusive, String upperInclusive) {
        return fetchRange(JHelpTopic.HELP_TOPIC.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<HelpTopic> fetchByJName(String... values) {
        return fetch(JHelpTopic.HELP_TOPIC.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public HelpTopic fetchOneByJName(String value) {
        return fetchOne(JHelpTopic.HELP_TOPIC.NAME, value);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public Optional<HelpTopic> fetchOptionalByJName(String value) {
        return fetchOptional(JHelpTopic.HELP_TOPIC.NAME, value);
    }

    /**
     * Fetch records that have <code>help_category_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<HelpTopic> fetchRangeOfJHelpCategoryId(UShort lowerInclusive, UShort upperInclusive) {
        return fetchRange(JHelpTopic.HELP_TOPIC.HELP_CATEGORY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>help_category_id IN (values)</code>
     */
    public List<HelpTopic> fetchByJHelpCategoryId(UShort... values) {
        return fetch(JHelpTopic.HELP_TOPIC.HELP_CATEGORY_ID, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<HelpTopic> fetchRangeOfJDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(JHelpTopic.HELP_TOPIC.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<HelpTopic> fetchByJDescription(String... values) {
        return fetch(JHelpTopic.HELP_TOPIC.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>example BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<HelpTopic> fetchRangeOfJExample(String lowerInclusive, String upperInclusive) {
        return fetchRange(JHelpTopic.HELP_TOPIC.EXAMPLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>example IN (values)</code>
     */
    public List<HelpTopic> fetchByJExample(String... values) {
        return fetch(JHelpTopic.HELP_TOPIC.EXAMPLE, values);
    }

    /**
     * Fetch records that have <code>url BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<HelpTopic> fetchRangeOfJUrl(String lowerInclusive, String upperInclusive) {
        return fetchRange(JHelpTopic.HELP_TOPIC.URL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>url IN (values)</code>
     */
    public List<HelpTopic> fetchByJUrl(String... values) {
        return fetch(JHelpTopic.HELP_TOPIC.URL, values);
    }
}
