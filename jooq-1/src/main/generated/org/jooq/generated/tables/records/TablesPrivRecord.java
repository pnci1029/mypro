/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record4;
import org.jooq.generated.tables.TablesPriv;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Table privileges
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TablesPrivRecord extends UpdatableRecordImpl<TablesPrivRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mysql.tables_priv.Host</code>.
     */
    public TablesPrivRecord setHost(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>mysql.tables_priv.Host</code>.
     */
    public String getHost() {
        return (String) get(0);
    }

    /**
     * Setter for <code>mysql.tables_priv.Db</code>.
     */
    public TablesPrivRecord setDb(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>mysql.tables_priv.Db</code>.
     */
    public String getDb() {
        return (String) get(1);
    }

    /**
     * Setter for <code>mysql.tables_priv.User</code>.
     */
    public TablesPrivRecord setUser(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>mysql.tables_priv.User</code>.
     */
    public String getUser() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mysql.tables_priv.Table_name</code>.
     */
    public TablesPrivRecord setTableName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>mysql.tables_priv.Table_name</code>.
     */
    public String getTableName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>mysql.tables_priv.Grantor</code>.
     */
    public TablesPrivRecord setGrantor(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>mysql.tables_priv.Grantor</code>.
     */
    public String getGrantor() {
        return (String) get(4);
    }

    /**
     * Setter for <code>mysql.tables_priv.Timestamp</code>.
     */
    public TablesPrivRecord setTimestamp(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>mysql.tables_priv.Timestamp</code>.
     */
    public LocalDateTime getTimestamp() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>mysql.tables_priv.Table_priv</code>.
     */
    public TablesPrivRecord setTablePriv(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>mysql.tables_priv.Table_priv</code>.
     */
    public String getTablePriv() {
        return (String) get(6);
    }

    /**
     * Setter for <code>mysql.tables_priv.Column_priv</code>.
     */
    public TablesPrivRecord setColumnPriv(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>mysql.tables_priv.Column_priv</code>.
     */
    public String getColumnPriv() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record4<String, String, String, String> key() {
        return (Record4) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TablesPrivRecord
     */
    public TablesPrivRecord() {
        super(TablesPriv.TABLES_PRIV);
    }

    /**
     * Create a detached, initialised TablesPrivRecord
     */
    public TablesPrivRecord(String host, String db, String user, String tableName, String grantor, LocalDateTime timestamp, String tablePriv, String columnPriv) {
        super(TablesPriv.TABLES_PRIV);

        setHost(host);
        setDb(db);
        setUser(user);
        setTableName(tableName);
        setGrantor(grantor);
        setTimestamp(timestamp);
        setTablePriv(tablePriv);
        setColumnPriv(columnPriv);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TablesPrivRecord
     */
    public TablesPrivRecord(org.jooq.generated.tables.pojos.TablesPriv value) {
        super(TablesPriv.TABLES_PRIV);

        if (value != null) {
            setHost(value.getHost());
            setDb(value.getDb());
            setUser(value.getUser());
            setTableName(value.getTableName());
            setGrantor(value.getGrantor());
            setTimestamp(value.getTimestamp());
            setTablePriv(value.getTablePriv());
            setColumnPriv(value.getColumnPriv());
            resetChangedOnNotNull();
        }
    }
}
