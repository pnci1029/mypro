/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.daos;


import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record4;
import org.jooq.generated.tables.JDefaultRoles;
import org.jooq.generated.tables.pojos.DefaultRoles;
import org.jooq.generated.tables.records.DefaultRolesRecord;
import org.jooq.impl.DAOImpl;


/**
 * Default roles
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DefaultRolesDao extends DAOImpl<DefaultRolesRecord, DefaultRoles, Record4<String, String, String, String>> {

    /**
     * Create a new DefaultRolesDao without any configuration
     */
    public DefaultRolesDao() {
        super(JDefaultRoles.DEFAULT_ROLES, DefaultRoles.class);
    }

    /**
     * Create a new DefaultRolesDao with an attached configuration
     */
    public DefaultRolesDao(Configuration configuration) {
        super(JDefaultRoles.DEFAULT_ROLES, DefaultRoles.class, configuration);
    }

    @Override
    public Record4<String, String, String, String> getId(DefaultRoles object) {
        return compositeKeyRecord(object.getHost(), object.getUser(), object.getDefaultRoleHost(), object.getDefaultRoleUser());
    }

    /**
     * Fetch records that have <code>HOST BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<DefaultRoles> fetchRangeOfJHost(String lowerInclusive, String upperInclusive) {
        return fetchRange(JDefaultRoles.DEFAULT_ROLES.HOST, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>HOST IN (values)</code>
     */
    public List<DefaultRoles> fetchByJHost(String... values) {
        return fetch(JDefaultRoles.DEFAULT_ROLES.HOST, values);
    }

    /**
     * Fetch records that have <code>USER BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<DefaultRoles> fetchRangeOfJUser(String lowerInclusive, String upperInclusive) {
        return fetchRange(JDefaultRoles.DEFAULT_ROLES.USER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>USER IN (values)</code>
     */
    public List<DefaultRoles> fetchByJUser(String... values) {
        return fetch(JDefaultRoles.DEFAULT_ROLES.USER, values);
    }

    /**
     * Fetch records that have <code>DEFAULT_ROLE_HOST BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<DefaultRoles> fetchRangeOfJDefaultRoleHost(String lowerInclusive, String upperInclusive) {
        return fetchRange(JDefaultRoles.DEFAULT_ROLES.DEFAULT_ROLE_HOST, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>DEFAULT_ROLE_HOST IN (values)</code>
     */
    public List<DefaultRoles> fetchByJDefaultRoleHost(String... values) {
        return fetch(JDefaultRoles.DEFAULT_ROLES.DEFAULT_ROLE_HOST, values);
    }

    /**
     * Fetch records that have <code>DEFAULT_ROLE_USER BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<DefaultRoles> fetchRangeOfJDefaultRoleUser(String lowerInclusive, String upperInclusive) {
        return fetchRange(JDefaultRoles.DEFAULT_ROLES.DEFAULT_ROLE_USER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>DEFAULT_ROLE_USER IN (values)</code>
     */
    public List<DefaultRoles> fetchByJDefaultRoleUser(String... values) {
        return fetch(JDefaultRoles.DEFAULT_ROLES.DEFAULT_ROLE_USER, values);
    }
}
