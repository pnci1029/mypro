/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import org.jooq.Record1;
import org.jooq.generated.tables.JTimeZoneLeapSecond;
import org.jooq.generated.tables.pojos.TimeZoneLeapSecond;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Leap seconds information for time zones
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TimeZoneLeapSecondRecord extends UpdatableRecordImpl<TimeZoneLeapSecondRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mysql.time_zone_leap_second.Transition_time</code>.
     */
    public TimeZoneLeapSecondRecord setTransitionTime(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>mysql.time_zone_leap_second.Transition_time</code>.
     */
    public Long getTransitionTime() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>mysql.time_zone_leap_second.Correction</code>.
     */
    public TimeZoneLeapSecondRecord setCorrection(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>mysql.time_zone_leap_second.Correction</code>.
     */
    public Integer getCorrection() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TimeZoneLeapSecondRecord
     */
    public TimeZoneLeapSecondRecord() {
        super(JTimeZoneLeapSecond.TIME_ZONE_LEAP_SECOND);
    }

    /**
     * Create a detached, initialised TimeZoneLeapSecondRecord
     */
    public TimeZoneLeapSecondRecord(Long transitionTime, Integer correction) {
        super(JTimeZoneLeapSecond.TIME_ZONE_LEAP_SECOND);

        setTransitionTime(transitionTime);
        setCorrection(correction);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TimeZoneLeapSecondRecord
     */
    public TimeZoneLeapSecondRecord(TimeZoneLeapSecond value) {
        super(JTimeZoneLeapSecond.TIME_ZONE_LEAP_SECOND);

        if (value != null) {
            setTransitionTime(value.getTransitionTime());
            setCorrection(value.getCorrection());
            resetChangedOnNotNull();
        }
    }
}
