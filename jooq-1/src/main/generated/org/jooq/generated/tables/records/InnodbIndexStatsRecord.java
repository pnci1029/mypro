/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record4;
import org.jooq.generated.tables.JInnodbIndexStats;
import org.jooq.generated.tables.pojos.InnodbIndexStats;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbIndexStatsRecord extends UpdatableRecordImpl<InnodbIndexStatsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mysql.innodb_index_stats.database_name</code>.
     */
    public InnodbIndexStatsRecord setDatabaseName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>mysql.innodb_index_stats.database_name</code>.
     */
    public String getDatabaseName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>mysql.innodb_index_stats.table_name</code>.
     */
    public InnodbIndexStatsRecord setTableName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>mysql.innodb_index_stats.table_name</code>.
     */
    public String getTableName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>mysql.innodb_index_stats.index_name</code>.
     */
    public InnodbIndexStatsRecord setIndexName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>mysql.innodb_index_stats.index_name</code>.
     */
    public String getIndexName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mysql.innodb_index_stats.last_update</code>.
     */
    public InnodbIndexStatsRecord setLastUpdate(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>mysql.innodb_index_stats.last_update</code>.
     */
    public LocalDateTime getLastUpdate() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>mysql.innodb_index_stats.stat_name</code>.
     */
    public InnodbIndexStatsRecord setStatName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>mysql.innodb_index_stats.stat_name</code>.
     */
    public String getStatName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>mysql.innodb_index_stats.stat_value</code>.
     */
    public InnodbIndexStatsRecord setStatValue(ULong value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>mysql.innodb_index_stats.stat_value</code>.
     */
    public ULong getStatValue() {
        return (ULong) get(5);
    }

    /**
     * Setter for <code>mysql.innodb_index_stats.sample_size</code>.
     */
    public InnodbIndexStatsRecord setSampleSize(ULong value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>mysql.innodb_index_stats.sample_size</code>.
     */
    public ULong getSampleSize() {
        return (ULong) get(6);
    }

    /**
     * Setter for <code>mysql.innodb_index_stats.stat_description</code>.
     */
    public InnodbIndexStatsRecord setStatDescription(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>mysql.innodb_index_stats.stat_description</code>.
     */
    public String getStatDescription() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record4<String, String, String, String> key() {
        return (Record4) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InnodbIndexStatsRecord
     */
    public InnodbIndexStatsRecord() {
        super(JInnodbIndexStats.INNODB_INDEX_STATS);
    }

    /**
     * Create a detached, initialised InnodbIndexStatsRecord
     */
    public InnodbIndexStatsRecord(String databaseName, String tableName, String indexName, LocalDateTime lastUpdate, String statName, ULong statValue, ULong sampleSize, String statDescription) {
        super(JInnodbIndexStats.INNODB_INDEX_STATS);

        setDatabaseName(databaseName);
        setTableName(tableName);
        setIndexName(indexName);
        setLastUpdate(lastUpdate);
        setStatName(statName);
        setStatValue(statValue);
        setSampleSize(sampleSize);
        setStatDescription(statDescription);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised InnodbIndexStatsRecord
     */
    public InnodbIndexStatsRecord(InnodbIndexStats value) {
        super(JInnodbIndexStats.INNODB_INDEX_STATS);

        if (value != null) {
            setDatabaseName(value.getDatabaseName());
            setTableName(value.getTableName());
            setIndexName(value.getIndexName());
            setLastUpdate(value.getLastUpdate());
            setStatName(value.getStatName());
            setStatValue(value.getStatValue());
            setSampleSize(value.getSampleSize());
            setStatDescription(value.getStatDescription());
            resetChangedOnNotNull();
        }
    }
}
